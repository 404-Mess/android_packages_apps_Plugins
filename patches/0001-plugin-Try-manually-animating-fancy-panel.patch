From 466ca152afa956d4d1d51b8f68ff68ca78b21d7f Mon Sep 17 00:00:00 2001
From: HrX03 <dn.bianco03@gmail.com>
Date: Mon, 4 May 2020 15:54:14 +0200
Subject: [PATCH 1/1] plugin: Try manually animating fancy panel

And yes, i completely failed for now
---
 FancyPanel/res/layout/volume_dialog_fancy.xml | 10 +--
 .../res/layout/volume_dialog_fancy_row.xml    |  3 +-
 .../volume/fancy/OutlineLinearLayout.java     | 80 +++++++++++++++++++
 .../plugin/volume/fancy/VolumeDialogImpl.java | 51 +++++++++---
 4 files changed, 126 insertions(+), 18 deletions(-)
 create mode 100644 FancyPanel/src/co/potatoproject/plugin/volume/fancy/OutlineLinearLayout.java

diff --git a/FancyPanel/res/layout/volume_dialog_fancy.xml b/FancyPanel/res/layout/volume_dialog_fancy.xml
index 2490cc8..ad0a7ce 100644
--- a/FancyPanel/res/layout/volume_dialog_fancy.xml
+++ b/FancyPanel/res/layout/volume_dialog_fancy.xml
@@ -53,7 +53,7 @@
                 android:id="@+id/fake_padding"
                 android:layout_width="0dp"
                 android:layout_height="56dp" />
-            <LinearLayout
+            <co.potatoproject.plugin.volume.fancy.OutlineLinearLayout
                 android:id="@+id/main"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
@@ -62,8 +62,7 @@
                 android:clipChildren="false"
                 android:clipToPadding="false"
                 android:translationZ="@dimen/volume_dialog_fancy_elevation"
-                android:background="@drawable/rounded_bg_full"
-                android:animateLayoutChanges="true" >
+                android:background="@drawable/rounded_bg_full" >
                 <LinearLayout
                     android:id="@+id/volume_dialog_rows"
                     android:layout_width="wrap_content"
@@ -71,11 +70,10 @@
                     android:layout_gravity="center"
                     android:gravity="center"
                     android:background="@drawable/rounded_bg_full"
-                    android:orientation="horizontal"
-                    android:animateLayoutChanges="true">
+                    android:orientation="horizontal">
                         <!-- volume rows added and removed here! :-) -->
                 </LinearLayout>
-            </LinearLayout>
+            </co.potatoproject.plugin.volume.fancy.OutlineLinearLayout>
         </LinearLayout>
 
         <LinearLayout
diff --git a/FancyPanel/res/layout/volume_dialog_fancy_row.xml b/FancyPanel/res/layout/volume_dialog_fancy_row.xml
index 3f6d05c..8130ae7 100644
--- a/FancyPanel/res/layout/volume_dialog_fancy_row.xml
+++ b/FancyPanel/res/layout/volume_dialog_fancy_row.xml
@@ -27,8 +27,7 @@
         android:layout_width="wrap_content"
         android:gravity="center"
         android:layout_gravity="center"
-        android:orientation="vertical"
-        android:animateLayoutChanges="true" >
+        android:orientation="vertical" >
         <com.android.keyguard.AlphaOptimizedImageButton
             android:id="@+id/volume_row_icon"
             style="@style/VolumeButtons"
diff --git a/FancyPanel/src/co/potatoproject/plugin/volume/fancy/OutlineLinearLayout.java b/FancyPanel/src/co/potatoproject/plugin/volume/fancy/OutlineLinearLayout.java
new file mode 100644
index 0000000..855a013
--- /dev/null
+++ b/FancyPanel/src/co/potatoproject/plugin/volume/fancy/OutlineLinearLayout.java
@@ -0,0 +1,80 @@
+package co.potatoproject.plugin.volume.fancy;
+
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Outline;
+import android.graphics.Path;
+import android.graphics.Rect;
+import android.graphics.RectF;
+import android.util.AttributeSet;
+import android.view.View;
+import android.view.ViewOutlineProvider;
+import android.widget.LinearLayout;
+
+public class OutlineLinearLayout extends LinearLayout {
+    private boolean mRTL;
+    private int mWidth;
+    private float mCornerRadius;
+
+    private RectF mRect;
+
+    public OutlineLinearLayout(Context context, AttributeSet attrs) {
+        this(context, attrs, 0);
+    }
+
+    public OutlineLinearLayout(Context context, AttributeSet attrs, int defAttrRes) {
+        super(context, attrs, defAttrRes);
+        mRect = new RectF();
+        setWillNotDraw(true);
+        setOutlineProvider(new CustomOutlineProvider());
+    }
+
+    @Override
+    public boolean drawChild(Canvas canvas, View view, long drawingTime) {
+        canvas.save();
+        int x = mRTL ? getWidth() - mWidth : 0;
+        int y = 0;
+
+        mRect = new RectF(
+            x,
+            y,
+            x + mWidth,
+            y + getHeight()
+        );
+
+        Path path = new Path();
+        path.addRoundRect(
+            mRect,
+            mCornerRadius,
+            mCornerRadius,
+            Path.Direction.CW
+        );
+        canvas.clipPath(path);
+        boolean drawChild = super.drawChild(canvas, view, drawingTime);
+        canvas.restore();
+        invalidateOutline();
+        return drawChild;
+    }
+
+    public void setWidth(int newWidth) {
+        mWidth = newWidth;
+    }
+
+    public void setCornerRadius(float newCornerRadius) {
+        mCornerRadius = newCornerRadius;
+    }
+
+    public void setRTL(boolean rtl) {
+        mRTL = rtl;
+    }
+
+    public class CustomOutlineProvider extends ViewOutlineProvider {
+        public CustomOutlineProvider() {}
+
+        public void getOutline(View view, Outline outline) {
+            Rect rect = new Rect();
+            mRect.round(rect);
+            outline.setRoundRect(rect, mCornerRadius);
+        }
+    }
+}
\ No newline at end of file
diff --git a/FancyPanel/src/co/potatoproject/plugin/volume/fancy/VolumeDialogImpl.java b/FancyPanel/src/co/potatoproject/plugin/volume/fancy/VolumeDialogImpl.java
index c103037..691cb1d 100644
--- a/FancyPanel/src/co/potatoproject/plugin/volume/fancy/VolumeDialogImpl.java
+++ b/FancyPanel/src/co/potatoproject/plugin/volume/fancy/VolumeDialogImpl.java
@@ -51,6 +51,7 @@ import android.graphics.PixelFormat;
 import android.graphics.Rect;
 import android.graphics.Region;
 import android.graphics.drawable.ColorDrawable;
+import android.graphics.drawable.GradientDrawable;
 import android.media.AudioManager;
 import android.media.AudioSystem;
 import android.os.Debug;
@@ -62,10 +63,10 @@ import android.os.VibrationEffect;
 import android.provider.Settings;
 import android.provider.Settings.Global;
 import android.text.InputFilter;
-import android.util.DisplayMetrics;
 import android.util.Log;
 import android.util.Slog;
 import android.util.SparseBooleanArray;
+import android.util.TypedValue;
 import android.view.ContextThemeWrapper;
 import android.view.Gravity;
 import android.view.LayoutInflater;
@@ -143,6 +144,7 @@ public class VolumeDialogImpl implements VolumeDialog,
 
     private View mDialog;
     private LinearLayout mDialogView;
+    private OutlineLinearLayout mMain;
     private ViewGroup mDialogRowsView;
     private ViewGroup mRinger;
     private ImageButton mRingerIcon;
@@ -164,7 +166,6 @@ public class VolumeDialogImpl implements VolumeDialog,
     private boolean mShowing;
     private boolean mShowA11yStream;
 
-    private int mDisplayHeight;
     private int mActiveStream;
     private int mPrevActiveStream;
     private boolean mAutomute = VolumePrefs.DEFAULT_ENABLE_AUTOMUTE;
@@ -260,6 +261,13 @@ public class VolumeDialogImpl implements VolumeDialog,
             return true;
         });
 
+        mButtonsGroup = mDialog.findViewById(R.id.buttons_group);
+
+        mMain = mDialog.findViewById(R.id.main);
+        int cornerRadiusRes = Utils.getThemeAttr(mContext, android.R.attr.dialogCornerRadius);
+        mMain.setCornerRadius(mContext.getResources().getDimensionPixelSize(cornerRadiusRes));
+        mMain.setClipToOutline(true);
+
         mDialogRowsView = mDialog.findViewById(R.id.volume_dialog_rows);
         mRinger = mDialog.findViewById(R.id.ringer);
         if (mRinger != null) {
@@ -267,8 +275,6 @@ public class VolumeDialogImpl implements VolumeDialog,
             mZenIcon = mRinger.findViewById(R.id.dnd_icon);
         }
 
-        mButtonsGroup = mDialog.findViewById(R.id.buttons_group);
-
         mODICaptionsView = mDialog.findViewById(R.id.odi_captions);
         if (mODICaptionsView != null) {
             mODICaptionsIcon = mODICaptionsView.findViewById(R.id.odi_captions_icon);
@@ -318,10 +324,12 @@ public class VolumeDialogImpl implements VolumeDialog,
             mainFrameLP.gravity = Gravity.RIGHT | Gravity.CENTER_VERTICAL;
             buttonsGroupLP.gravity = Gravity.RIGHT | Gravity.CENTER_VERTICAL;
             mExpandRows.setRotation(90);
+            mMain.setRTL(true);
         } else {
             mainFrameLP.gravity = Gravity.LEFT | Gravity.CENTER_VERTICAL;
             buttonsGroupLP.gravity = Gravity.LEFT | Gravity.CENTER_VERTICAL;
             mExpandRows.setRotation(-90);
+            mMain.setRTL(false);
         }
         mDialogView.setLayoutParams(dialogViewLP);
         mDialog.findViewById(R.id.main_frame).setLayoutParams(mainFrameLP);
@@ -394,7 +402,11 @@ public class VolumeDialogImpl implements VolumeDialog,
         if (D.BUG) Slog.d(TAG, "Adding row for stream " + stream);
         VolumeRow row = new VolumeRow();
         initRow(row, stream, iconRes, iconMuteRes, important, defaultStream);
-        mDialogRowsView.addView(row.view);
+        if(!isAudioPanelOnLeftSide()){
+            mDialogRowsView.addView(row.view, 0);
+        } else {
+            mDialogRowsView.addView(row.view);
+        }
         mRows.add(0, row);
     }
 
@@ -455,6 +467,15 @@ public class VolumeDialogImpl implements VolumeDialog,
         return null;
     }
 
+    private int getShownRows() {
+        int amount = 0;
+        for(final VolumeRow row : mRows) {
+            if(row.view.isShown())
+                amount++;
+        }
+        return amount;
+    }
+
     public void dump(PrintWriter writer) {
         writer.println(VolumeDialogImpl.class.getSimpleName() + " state:");
         writer.print("  mShowing: "); writer.println(mShowing);
@@ -696,7 +717,6 @@ public class VolumeDialogImpl implements VolumeDialog,
             updateVolumeRowTintH(row, getActiveRow().equals(row));
         }
 
-        LinearLayout main = (LinearLayout) mDialog.findViewById(R.id.main);
         View fakePadding = mDialog.findViewById(R.id.fake_padding);
 
         ViewPropertyAnimator animator = mButtonsGroup.animate()
@@ -706,15 +726,24 @@ public class VolumeDialogImpl implements VolumeDialog,
         int rowSidePadding = mContext.getResources().getDimensionPixelSize(R.dimen.volume_dialog_row_side_padding);
 
         if(mode != PanelMode.MINI) {
-            main.setMinimumWidth(mContext.getResources().getDimensionPixelSize(R.dimen.volume_dialog_panel_width));
-            mButtonsGroup.setVisibility(VISIBLE);
             mDialogRowsView.setPadding(rowSidePadding, 0, rowSidePadding, 0);
+            mMain.setMinimumWidth(mContext.getResources().getDimensionPixelSize(R.dimen.volume_dialog_panel_width));
+            mMain.setWidth(
+                (rowSidePadding * 2) +
+                    (mContext.getResources().getDimensionPixelSize(R.dimen.volume_dialog_row_width) *
+                        getShownRows())
+            );
+            mButtonsGroup.setVisibility(VISIBLE);
             fakePadding.setVisibility(GONE);
             animator.start();
         } else {
-            main.setMinimumWidth(mContext.getResources().getDimensionPixelSize(R.dimen.volume_dialog_panel_mini_width));
-            mButtonsGroup.setVisibility(INVISIBLE);
             mDialogRowsView.setPadding(0, 0, 0, 0);
+            mMain.setMinimumWidth(mContext.getResources().getDimensionPixelSize(R.dimen.volume_dialog_panel_mini_width));
+            mMain.setWidth(
+                mContext.getResources().getDimensionPixelSize(R.dimen.volume_dialog_panel_mini_width) *
+                getShownRows()
+            );
+            mButtonsGroup.setVisibility(INVISIBLE);
             fakePadding.setVisibility(VISIBLE);
             mButtonsGroup.setAlpha(0);
             animator.alpha(0);
@@ -849,6 +878,8 @@ public class VolumeDialogImpl implements VolumeDialog,
                     .setDuration(DIALOG_SHOW_ANIMATION_DURATION)
                     .setInterpolator(new SystemUIInterpolators.LogDecelerateInterpolator())
                     .withStartAction(() -> {
+                        mPanelMode = PanelMode.MINI;
+                        updatePanelOnMode();
                         if(!mDialog.isShown()) {
                             mWindowManager.addView(mDialog, mWindowParams);
                         }
-- 
2.25.1

